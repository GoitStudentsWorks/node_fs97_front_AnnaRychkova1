{"version":3,"file":"SignUp-B1X8uOxu.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUp/SignUp.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport Logo from '../Logo/Logo';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { userRegister } from '../../redux/users/operations';\nimport { useState } from 'react';\nimport sprite from '../../assets/images/svg/symbol-defs.svg';\nimport css from './SignUpForm.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('Email field is required'),\n  password: yup\n    .string()\n    .required('Password field is required')\n    .min(6, 'Password must contain at least 6 characters'),\n  repeatPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Repeat Password field is required'),\n});\n\nconst SignUpForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    repeatPassword: '',\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: formData,\n    mode: 'onBlur',\n  });\n\n  const handleFocus = fieldName => clearErrors(fieldName);\n\n  const onSubmit = data => {\n    const {\n      // repeatPassword,\n      ...userData\n    } = data;\n    dispatch(userRegister(userData));\n    reset();\n    setFormData({\n      email: '',\n      password: '',\n      repeatPassword: '',\n    });\n  };\n\n  return (\n    <div className={css.loginContainer}>\n      <Logo />\n\n      <div className={css.formContainer}>\n        <p className={css.title}>{t('signupForm.signup')}</p>\n        <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n          <label className={css.label}>{t('signupForm.email')}</label>\n          <div className={css.input_field}>\n            <input\n              className={`${css.input} ${errors.email ? css.error : ''}`}\n              type=\"email\"\n              {...register('email')}\n              placeholder={t('signupForm.placeholderEmail')}\n              autoComplete=\"on\"\n              onChange={e =>\n                setFormData({ ...formData, email: e.target.value })\n              }\n              value={formData.email}\n              onFocus={() => handleFocus('email')}\n            />\n            {errors.email && (\n              <span className={css.errors}>{errors.email.message}</span>\n            )}\n          </div>\n          <label className={css.label}>{t('signupForm.password')}</label>\n          <div className={css.input_field}>\n            <input\n              className={`${css.input} ${errors.password ? css.error : ''}`}\n              type={showPassword ? 'text' : 'password'}\n              {...register('password')}\n              placeholder={t('signupForm.placeholderPassword')}\n              onChange={e =>\n                setFormData({ ...formData, password: e.target.value })\n              }\n              value={formData.password}\n              onFocus={() => handleFocus('password')}\n            />\n            {errors.password && (\n              <span className={css.errors}>{errors.password.message}</span>\n            )}\n            <svg\n              className={showPassword ? css.eyeIconOff : css.icon_eye}\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <use\n                width={20}\n                height={20}\n                xlinkHref={`${sprite}${showPassword ? '#eye' : '#eye-off'}`}\n              ></use>\n            </svg>\n          </div>\n          <label className={css.label}>{t('signupForm.repeat')}</label>\n          <div className={css.input_field}>\n            <input\n              className={`${css.input} ${\n                errors.repeatPassword ? css.error : ''\n              }`}\n              type={showPassword ? 'text' : 'password'}\n              {...register('repeatPassword')}\n              placeholder={t('signupForm.placeholderPasswordRepeat')}\n              onChange={e =>\n                setFormData({ ...formData, repeatPassword: e.target.value })\n              }\n              value={formData.repeatPassword}\n              onFocus={() => handleFocus('repeatPassword')}\n            />\n            {errors.repeatPassword && (\n              <span className={css.errors}>\n                {errors.repeatPassword.message}\n              </span>\n            )}\n            <svg\n              className={showPassword ? css.eyeIconOff : css.icon_eye}\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <use\n                width={20}\n                height={20}\n                xlinkHref={`${sprite}${showPassword ? '#eye' : '#eye-off'}`}\n              ></use>\n            </svg>\n          </div>\n          <button className={css.button} type=\"submit\">\n            {t('signupForm.signup')}\n          </button>\n        </form>\n        <p className={css.description}>\n          {t('signupForm.haveAccount')}?&nbsp;\n          <Link className={css.link} to={'/signin'}>\n            {t('signupForm.signin')}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n\n/**====================================================== */\n// import { Link, useNavigate } from 'react-router-dom';\n// import Logo from '../Logo/Logo';\n// import * as yup from 'yup';\n// import { yupResolver } from '@hookform/resolvers/yup';\n// import { useForm } from 'react-hook-form';\n// import { useDispatch } from 'react-redux';\n// import { userRegister } from '../../redux/users/operations';\n// import { useState } from 'react';\n// import sprite from '../../assets/images/svg/symbol-defs.svg';\n// import Notification from '../Notification/Notification';\n// import css from './SignUpForm.module.css';\n\n// const schema = yup.object().shape({\n//   email: yup\n//     .string()\n//     .email('Please enter valid email')\n//     .required('Email field is required'),\n//   password: yup\n//     .string()\n//     .required('Password field is required')\n//     .min(6, 'Password must contain at least 6 characters'),\n//   repeatPassword: yup\n//     .string()\n//     .oneOf([yup.ref('password'), null], 'Some error password')\n//     .required('Repeat Password field is required'),\n// });\n\n// const SignUpForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: '',\n//     repeatPassword: '',\n//   });\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//     reset,\n//   } = useForm({\n//     resolver: yupResolver(schema),\n//     defaultValues: formData,\n//     mode: 'onBlur',\n//   });\n\n//   const onSubmit = data => {\n//     const { repeatPassword, ...userData } = data;\n//     // dispatch(userRegister(userData)).then(() => {\n//     //   navigate('/signin');\n//     // });\n\n//     // dispatch(userRegister(userData)).then(() => {\n//     //   navigate('/tracker');\n//     // });\n\n//     dispatch(userRegister(userData));\n//     reset();\n//     setFormData({\n//       email: '',\n//       password: '',\n//       repeatPassword: '',\n//     });\n//   };\n\n//   return (\n//     <div className={css.loginContainer}>\n//       <Logo />\n\n//       <div className={css.formContainer}>\n//         <p className={css.title}>Sign Up</p>\n//         <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n//           <label className={css.label}>Email</label>\n//           <div className={css.input_field}>\n//             <input\n//               className={`${css.input} ${errors.email ? css.error : ''}`}\n//               type=\"email\"\n//               {...register('email')}\n//               placeholder=\"Enter your email\"\n//               autoComplete=\"on\"\n//               onChange={e =>\n//                 setFormData({ ...formData, email: e.target.value })\n//               }\n//               value={formData.email}\n\n//             />\n//             {errors.email && (\n//               <span className={css.errors}>{errors.email.message}</span>\n//               //<Notification type=\"error\" message={errors.email.message} />\n//             )}\n//           </div>\n//           <label className={css.label}>Password</label>\n//           <div className={css.input_field}>\n//             <input\n//               className={`${css.input} ${errors.password ? css.error : ''}`}\n//               type={showPassword ? 'text' : 'password'}\n//               {...register('password')}\n//               placeholder=\"Enter your password\"\n//               onChange={e =>\n//                 setFormData({ ...formData, password: e.target.value })\n//               }\n//               value={formData.password}\n\n//             />\n//             {errors.password && (\n//               <span className={css.errors}>{errors.password.message}</span>\n//               //<Notification type=\"error\" message={errors.password.message} />\n//             )}\n//             <svg\n//               className={showPassword ? css.eyeIconOff : css.icon_eye}\n//               onClick={() => setShowPassword(!showPassword)}\n//             >\n//               <use\n//                 width={20}\n//                 height={20}\n//                 xlinkHref={`${sprite}${showPassword ? '#eye' : '#eye-off'}`}\n//               ></use>\n//             </svg>\n//           </div>\n//           <label className={css.label}>Repeat Password</label>\n//           <div className={css.input_field}>\n//             <input\n//               className={`${css.input} ${\n//                 errors.repeatPassword ? css.error : ''\n//               }`}\n//               type={showPassword ? 'text' : 'password'}\n//               {...register('repeatPassword')}\n//               placeholder=\"Repeat password\"\n//               onChange={e =>\n//                 setFormData({ ...formData, repeatPassword: e.target.value })\n//               }\n//               value={formData.repeatPassword}\n\n//             />\n//             {errors.repeatPassword && (\n//               <span className={css.errors}>\n//                 {errors.repeatPassword.message}\n//               </span>\n//               // <Notification\n//               //   type=\"error\"\n//               //   message={errors.repeatPassword.message}\n//               // />\n//             )}\n//             <svg\n//               className={showPassword ? css.eyeIconOff : css.icon_eye}\n//               onClick={() => setShowPassword(!showPassword)}\n//             >\n//               <use\n//                 width={20}\n//                 height={20}\n//                 xlinkHref={`${sprite}${showPassword ? '#eye' : '#eye-off'}`}\n//               ></use>\n//             </svg>\n//           </div>\n//           <button className={css.button} type=\"submit\">\n//             Sign Up\n//           </button>\n//         </form>\n//         <p className={css.description}>\n//           Already have an account?&nbsp;\n//           <Link className={css.link} to={'/signin'}>\n//             Sign In\n//           </Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignUpForm;\n","import { Helmet } from 'react-helmet-async';\nimport SignUpForm from '..//../components/SignUpForm/SignUpForm';\nimport AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/users/selectors';\nimport Loader from '../../components/Loader/Loader';\nimport css from './SignUpPage.module.css';\nimport { useTranslation } from 'react-i18next';\n\nconst SignUp = () => {\n  const loading = useSelector(selectIsLoading);\n  const { t } = useTranslation();\n  return (\n    <>\n      {loading && <Loader />}\n      <Helmet>\n        <title>{t('pages.signup')}</title>\n      </Helmet>\n      <div className={css.generalSignInForm}>\n        <SignUpForm />\n        <div className={css.AdvantagesSection_plus}>\n          <AdvantagesSection />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n"],"names":["schema","yup.object","yup.string","yup.ref","SignUpForm","t","useTranslation","dispatch","useDispatch","showPassword","setShowPassword","useState","formData","setFormData","register","handleSubmit","errors","reset","clearErrors","useForm","yupResolver","handleFocus","fieldName","onSubmit","data","userData","userRegister","jsxs","css","jsx","Logo","e","sprite","Link","SignUp","loading","useSelector","selectIsLoading","Fragment","Loader","Helmet","AdvantagesSection"],"mappings":"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"}