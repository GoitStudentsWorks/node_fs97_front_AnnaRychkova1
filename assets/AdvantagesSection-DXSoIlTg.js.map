{"version":3,"file":"AdvantagesSection-DXSoIlTg.js","sources":["../../src/components/AdvantagesSection/CountPeople.jsx","../../src/components/AdvantagesSection/AdvantagesSection.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport css from './CountPeople.module.css';\nimport { useTranslation } from 'react-i18next';\nimport Loader from '../Loader/Loader';\n\nconst UserCount = () => {\n  const { t } = useTranslation();\n  const [userCount, setUserCount] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUserCount = async () => {\n      try {\n        const response = await fetch(\n          'https://aquatrack-back-1.onrender.com/api/users/count'\n        );\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setUserCount(data.userCount);\n      } catch (error) {\n        setError(error);\n        console.error('Error fetching user count:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserCount();\n  }, []);\n\n  const formatUserCount = count => {\n    if (count > 10000) {\n      return `${(count / 1000).toFixed(2)} `;\n    } else {\n      return count.toString();\n    }\n  };\n\n  if (loading) return <Loader />;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className={`${css.count_Users} ${css.desktopOnly}${css.countplus}`}>\n      <p className={css.count_Text}>\n        {t('adwantagesSection.count.our')}{' '}\n        <span className={css.textSpan}>\n          {t('adwantagesSection.count.team')}{' '}\n        </span>{' '}\n        {t('adwantagesSection.count.now')} : {formatUserCount(userCount)}\n      </p>\n    </div>\n  );\n};\n\nexport default UserCount;\n","import { useTranslation } from 'react-i18next';\nimport css from './AdvantagesSection.module.css';\nimport UserCount from './CountPeople';\n\nconst AdvantagesSection = () => {\n  const { t } = useTranslation();\n  return (\n    <div className={css.advantages_main}>\n      <div className={css.advantages_users}>\n        <ul className={css.advantages_usersImg}>\n          <li className={css.advantages_point}>\n            <div className={`${css.user} ${css.user1}`}></div>\n          </li>\n\n          <li className={css.advantages_point}>\n            <div className={`${css.user} ${css.user2}`}></div>\n          </li>\n\n          <li className={css.advantages_point}>\n            <div className={`${css.user} ${css.user3}`}></div>\n          </li>\n        </ul>\n        <p className={css.advantagesText}>\n          {t('adwantagesSection.our')}{' '}\n          <span className={css.textSpan}>{t('adwantagesSection.happy')}</span>{' '}\n          {t('adwantagesSection.customers')}\n        </p>\n      </div>\n\n      <div className={css.advantagesGroup_habits}>\n        <ul className={css.advantagesTabs}>\n          <li className={css.advantages_habits}>\n            <div className={css.ellipse}></div>\n            <p className={css.habit_1}>{t('adwantagesSection.habit')}</p>\n          </li>\n          <li className={css.advantages_habits}>\n            <p className={css.habit_2}>{t('adwantagesSection.statistics')}</p>\n          </li>\n\n          <li className={css.advantages_habits}>\n            <p className={css.habit_3}>{t('adwantagesSection.rate')}</p>\n          </li>\n        </ul>\n      </div>\n      <UserCount />\n    </div>\n  );\n};\nexport default AdvantagesSection;\n"],"names":["UserCount","t","useTranslation","userCount","setUserCount","useState","loading","setLoading","error","setError","useEffect","response","data","formatUserCount","count","jsx","Loader","jsxs","css","AdvantagesSection"],"mappings":"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"}